package com.intrepid.nicge.gui.styles;

import com.badlogic.gdx.graphics.Color;
import com.intrepid.nicge.gui.IStyle;

public enum Styles
    implements IStyle
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Definitions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    DEFAULT( new DefaultStyle() ),
    ;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Fields and Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private final IStyle style;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Styles( IStyle style )
    {
        this.style = style;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Override
    public Color getWindowTitleColor()
    {
        return style.getWindowTitleColor();
    }

    @Override
    public Color getWindowBodyColor()
    {
        return style.getWindowBodyColor();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Inner Classes And Patterns
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
