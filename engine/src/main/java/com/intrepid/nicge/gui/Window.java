package com.intrepid.nicge.gui;

import com.badlogic.gdx.graphics.Texture;
import com.intrepid.nicge.kernel.game.Game;
import com.intrepid.nicge.utils.containers.TopTailList;
import com.intrepid.nicge.utils.graphics.GraphicsBatch;
import com.intrepid.nicge.utils.graphics.TextureWorks;

public abstract class Window
    extends ComponentContainer
    implements IComponent
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private static final int TITLE_SIZE = 30;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Special Fields And Injections
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Fields
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private final WindowParameters xwParameters;
    private final Texture titleTexture;
    private final Texture bodyTexture;
    private final TopTailList.Node< Window > node;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public Window( WindowParameters wp )
    {
        this.xwParameters = new WindowParameters( wp );
        this.titleTexture = TextureWorks.createTexture( wp.getWidth(), TITLE_SIZE, wp.getTitleColor() );
        this.bodyTexture = TextureWorks.createTexture( wp.getWidth(), wp.getHeight() - TITLE_SIZE, wp.getBodyColor() );
        this.node = new TopTailList.Node<>( this );
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Factories
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Getters And Setters
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public TopTailList.Node< Window > getNode()
    {
        return node;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void loadAssets()
    {
    }

    @Override
    public final void display( GraphicsBatch batch )
    {
        final int yCorrection = Game.common.getGameConfiguration().getNativeResolutionHeight() - xwParameters.getY() - TITLE_SIZE;
        batch.draw( titleTexture, xwParameters.getX(), yCorrection );
        final int yCorrection1 = Game.common.getGameConfiguration().getNativeResolutionHeight() - ( xwParameters.getY() + xwParameters.getHeight() );
//        final int yCorrection1 = ( xwParameters.getY() + TITLE_SIZE );
        batch.draw( bodyTexture, xwParameters.getX(), yCorrection1 );
        super.display( batch );
    }

    public void enable()
    {
        getComponents().values().forEach( c -> c.getComponentParameters().setEnabled( true ) );
    }

    public void disable()
    {
        getComponents().values().forEach( c -> c.getComponentParameters().setEnabled( false ) );
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Inner Classes And Patterns
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
