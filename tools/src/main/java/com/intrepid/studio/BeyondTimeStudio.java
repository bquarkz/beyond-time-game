package com.intrepid.studio;

import com.intrepid.nicge.content.IResource;
import com.intrepid.nicge.kernel.game.GameBoot;
import com.intrepid.nicge.kernel.game.GameConfiguration;
import com.intrepid.nicge.theater.curtain.Curtain;
import com.intrepid.nicge.theater.scene.IScene;
import com.intrepid.nicge.utils.fsmachine.IFSMachineDefinition;
import com.intrepid.nicge.utils.logger.Log;
import com.intrepid.studio.curtains.AllCurtains;

import java.util.Set;

public class BeyondTimeStudio
        implements GameBoot
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Special Fields And Injections
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Fields
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private final GameConfiguration gameConfiguration;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public BeyondTimeStudio( GameConfiguration gameConfiguration )
    {
        this.gameConfiguration = gameConfiguration;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Factories
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Getters And Setters
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Override
    public IFSMachineDefinition< IScene > instantiation()
    {
        Log.from( BeyondTimeStudio.class ).info( "scenes instantiation" );
        return null;
    }

    @Override
    public void loader( Set< IResource< ? > > resources )
    {
        Log.from( BeyondTimeStudio.class ).info( "loading assets" );
        for( Curtain curtain : AllCurtains.values() )
        {
            curtain.injectResourcesOn( resources );
        }
    }

    @Override
    public void initialization()
    {
        Log.from( BeyondTimeStudio.class ).info( "objects initializing" );
    }

    @Override
    public GameConfiguration getConfig()
    {
        return gameConfiguration;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Inner Classes And Patterns
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
